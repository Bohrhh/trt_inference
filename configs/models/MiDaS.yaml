# =======================================
# stereo_camera
# Args:
#   video         -- the id for camera device or name for video path.
#                    if it is an id, height, width and fourcc should be provided
#   height        -- video height
#   width         -- video width
#   fourcc        -- MJPG 
#   remap         -- 0 for false, 1 for true. 
#                    if 1 rectify_alpha and calib_file should be provided
#   rectify_alpha -- 0.0 means no black areas after rectification, 
#                    1.0 means no source image pixels are lost
#   calib_file    -- calibration file of stereo camera
# =======================================
stereo_camera:
  video: data/outdoor_original.avi
  height: 480
  width: 1280
  fourcc: MJPG
  remap: 1
  rectify_alpha: 0.0
  calib_file: configs/camera/stereo-1.yml


# =======================================
# image preprocess
# Args:
#   image_mode  -- 0 for RGB, 1 for BGR, 2 for Gray
#   resize_mode -- 0 for Nearest, 1 for Bilinear
#   height      -- output image height
#   width       -- output image width
#   norm        -- whether divide by 255 before normlization. 0 for false, 1 for true
#   padding     -- whether scale up or scale down the height and width 
#                  with the same ratio. 0 for false, 1 for true
#   mean        -- means of pixels values
#   std         -- stds of pixels values
# =======================================
preprocess:
  image_mode: 0
  resize_mode: 1
  height: 384
  width: 384
  norm: 1
  padding: 0
  mean: [0.0, 0.0, 0.0]
  std:  [1.0, 1.0, 1.0]


# =======================================
# model
# Args:
#   type    -- model type which can be selected from stereo, instance_seg, feature_extraction
#   path    -- tensorrt model path
#   inputs  -- model's inputs
#   outputs -- model's outputs
# =======================================
model:
  type: mono
  path: data/MiDaS.trt
  inputs:  [img]
  outputs: [depth]



